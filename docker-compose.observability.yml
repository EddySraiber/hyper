version: '3.8'

# Clean Enterprise-Grade Observability Stack
# Follows architectural best practices with proper separation

services:
  # Prometheus - Time Series Database
  prometheus:
    image: prom/prometheus:v2.47.2
    container_name: algotrading_prometheus
    restart: unless-stopped
    
    ports:
      - "9090:9090"
      
    volumes:
      - ./observability/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
      
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--storage.tsdb.retention.time=90d'
      - '--web.enable-lifecycle'
      - '--log.level=info'
      
    networks:
      - algotrading_network
      
    # depends_on:
    #   - algotrading-agent  # Runs in main compose
      
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Pushgateway - For Backtest Metrics
  pushgateway:
    image: prom/pushgateway:v1.6.2
    container_name: algotrading_pushgateway
    restart: unless-stopped
    
    ports:
      - "9091:9091"
      
    command:
      - '--web.listen-address=:9091'
      - '--log.level=info'
      
    networks:
      - algotrading_network
      
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9091/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Grafana - Visualization Platform
  grafana:
    image: grafana/grafana:10.2.0
    container_name: algotrading_grafana
    restart: unless-stopped
    
    ports:
      - "3000:3000"
      
    environment:
      # Security
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ALLOW_EMBEDDING=true
      
      # Performance
      - GF_DATABASE_MAX_OPEN_CONNECTIONS=300
      - GF_DATABASE_MAX_IDLE_CONNECTIONS=300
      
      # Features
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_DOMAIN=localhost
      - GF_ANALYTICS_REPORTING_ENABLED=false
      
    volumes:
      - grafana_data:/var/lib/grafana
      - ./observability/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./observability/grafana/dashboards:/var/lib/grafana/dashboards:ro
      
    networks:
      - algotrading_network
      
    depends_on:
      - prometheus
      
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  algotrading_network:
    external: true
    name: hyper_algotrading_network